<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:p="clr-namespace:Walkabout.Commands"
                    xmlns:c="clr-namespace:Walkabout.WpfConverters"
                    xmlns:controls="clr-namespace:Walkabout.Controls"
                    xmlns:local="clr-namespace:Walkabout.Utilities"
                    xmlns:views="clr-namespace:Walkabout.Views"                    
                    xmlns:s="clr-namespace:System;assembly=mscorlib">


    <SolidColorBrush x:Key="MainBackgroundBrush" Color="White"/>
    <SolidColorBrush x:Key="WalkaboutAccountClosedTextBrush" Color="Gray"/>
    <SolidColorBrush x:Key="WalkaboutAccountEnabledTextBrush" Color="Black"/>
    <SolidColorBrush x:Key="WalkaboutSelectedTextBrush" Color="Black"/>
    <SolidColorBrush x:Key="FlyoutBorderThemeBrush" Color="Black"/>
    <SolidColorBrush x:Key="FlyoutBackgroundThemeBrush" Color="#F6F4F2"/>

    <SolidColorBrush x:Key="DialogWindowBackgroundBrush" Color="#F6F4F2"/>

    <!-- was 7BD1AA -->
    <SolidColorBrush x:Key="WalkaboutReconciledRowBackgroundBrush" Color="#A1EFC9"/>

    <!-- for custom buttons -->
    <SolidColorBrush x:Key="ButtonSelectedBackground" Color="White"/>

    <!-- for hyperlinks in reports -->
    <SolidColorBrush x:Key="HyperlinkForeground" Color="SlateBlue"/>

    <!-- CloseBox -->
    <SolidColorBrush x:Key="CloseBoxNormalBackground" Color="Gray"/>
    <SolidColorBrush x:Key="CloseBoxNormalForeground" Color="White"/>
    <SolidColorBrush x:Key="CloseBoxMousePressedBackground" Color="#DBC790"/>
    <SolidColorBrush x:Key="CloseBoxMousePressedForeground" Color="Black"/>
    <SolidColorBrush x:Key="CloseBoxMouseOverBackground" Color="#FFF7DE"/>
    <SolidColorBrush x:Key="CloseBoxMouseOverForeground" Color="Black"/>

    <!-- RoundedButton uses these, and some of these colors are also used by some other control templates -->
    <SolidColorBrush x:Key="ButtonNormalBackground" Color="Gray"/>
    <SolidColorBrush x:Key="ButtonNormalForeground" Color="White"/>
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="Gray"/>
    <SolidColorBrush x:Key="ButtonMousePressedBackground" Color="#FFAD60"/>
    <SolidColorBrush x:Key="ButtonMousePressedForeground" Color="Black"/>
    <SolidColorBrush x:Key="ButtonMousePressedBorder" Color="Black"/>
    <SolidColorBrush x:Key="ButtonMouseOverBackground" Color="#FFE8A6"/>
    <SolidColorBrush x:Key="ButtonMouseOverForeground" Color="Black"/>
    <SolidColorBrush x:Key="ButtonMouseOverBorder" Color="Black"/>

    <s:Double x:Key="MainTransactionAreaFontSize">12</s:Double>
    <s:Double x:Key="LegendItemSwatchWidth">16</s:Double>
    <s:Double x:Key="LegendItemSwatchHeight">16</s:Double>

    <SolidColorBrush x:Key="TextBrush" Color="Black" />

    <SolidColorBrush x:Key="TransactionConnectorBrush" Color="DarkSlateBlue" />

    <FontFamily x:Key="DataGridFont">Segoe UI</FontFamily>

    <SolidColorBrush x:Key="GridNormalBackgroundBrush" Color="#EFF7FF"/>
    <SolidColorBrush x:Key="GridAlternateBackgroundBrush" Color="#E0F1FF"/>

    <LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="LightBlue" />
        <GradientStop Color="LightBlue" Offset="1" />
    </LinearGradientBrush>

    <c:NullOrEmptyStringToVisible x:Key="NullOrEmptyStringToVisible" />
    <c:CategoryTypeLetterConverter x:Key="CategoryTypeLetterConverter"/>

    <LinearGradientBrush x:Key="MessageBoxCaptionBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#C8D1E0" Offset="0" />
        <GradientStop Color="#AEB9CD" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ValidDropTargetFeedbackBrush" Color="Navy"/>

    <Style x:Key="SmoothFadeIn" TargetType="FrameworkElement" >
        <Style.Triggers>
            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation 
                                    Storyboard.TargetProperty="Opacity" 
                                    From="0.0" To="1.0" Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>


    <LinearGradientBrush x:Key="RedButton"  EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#FF863C3C" Offset="0.015" />
        <GradientStop Color="#FFE22E2E" Offset="0.519" />
        <GradientStop Color="#FF934F4F" Offset="1" />
    </LinearGradientBrush>


    <SolidColorBrush x:Key="QuickFilterBackgroundBrush"  Color="#AAFFFFFF"/>


    <!-- CONVERTERS -->
    <local:CategoryToBrush x:Key="CategoryToBrush" />
    <c:SqlDecimalToDecimalConverter x:Key="SqlDecimalToDecimalConverter" />
    <c:DecimalToDecimalConverter x:Key="DecimalToDecimalConverter" />


    <Style x:Key="NumericTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="controls:CalculatorPopup.CalculatorEnabled" Value="True" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Background" Value="Red"/>
                <Setter Property="ToolTip" 
                          Value="{Binding RelativeSource={RelativeSource Self},
                          Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="DataTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Background" Value="Red"/>
                <Setter Property="ToolTip" 
                          Value="{Binding RelativeSource={RelativeSource Self},
                          Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>

    </Style>
    <Style x:Key="ComboBoxItemSecurity" TargetType="ComboBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientOver" Storyboard.TargetProperty="Opacity" To="0.73"/>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientOver" Storyboard.TargetProperty="Opacity" To="0"/>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0.84"/>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0"/>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid SnapsToDevicePixels="true">
                        <Rectangle x:Name="BackgroundGradientOver" Fill="{DynamicResource MouseOverBrush}" Stroke="{DynamicResource hoverStroke}" RadiusX="2" RadiusY="2"  Opacity="0"/>
                        <Rectangle x:Name="BackgroundGradientSelected" Fill="{DynamicResource WalkaboutToolBoxListBoxItemBrushWhenSelected}" Stroke="{DynamicResource SelectedItemBorderBrush}" RadiusX="2" RadiusY="2" Opacity="0"/>
                        <Rectangle x:Name="BackgroundHighlight" Margin="1" Stroke="#A0FFFFFF" RadiusX="1" RadiusY="1"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=Name}" Margin="2,0,5,0" FontWeight="Medium" TextAlignment="Center"/>
                            <TextBlock x:Name="S1" Text=" (" FontWeight="DemiBold" TextAlignment="Left" />
                            <TextBlock x:Name="S2" Text="{Binding Path=Symbol}" FontWeight="DemiBold" TextAlignment="Left" />
                            <TextBlock x:Name="S3" Text=")" FontWeight="DemiBold" TextAlignment="Left" />
                        </StackPanel>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=HasSymbol}" Value="false">
                            <Setter TargetName="S1" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="S2" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="S3" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" x:Name="HoverOn_BeginStoryboard"/>
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsHighlighted" Value="true"/>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard1"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard1"/>
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxItemCategory" TargetType="ComboBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientOver" Storyboard.TargetProperty="Opacity" To="0.73"/>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientOver" Storyboard.TargetProperty="Opacity" To="0"/>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0.84"/>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0"/>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid SnapsToDevicePixels="true">
                        <Rectangle x:Name="BackgroundGradientOver" Fill="{DynamicResource MouseOverBrush}" Stroke="{DynamicResource hoverStroke}" RadiusX="2" RadiusY="2"  Opacity="0"/>
                        <Rectangle x:Name="BackgroundGradientSelected" Fill="{DynamicResource WalkaboutToolBoxListBoxItemBrushWhenSelected}" Stroke="{DynamicResource SelectedItemBorderBrush}" RadiusX="2" RadiusY="2" Opacity="0"/>
                        <Rectangle x:Name="BackgroundHighlight" Margin="1" Stroke="#A0FFFFFF" RadiusX="1" RadiusY="1"/>
                        <Grid Background="{TemplateBinding Background}" Width="400" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=Prefix}"  Opacity=".7" FontSize="10" VerticalAlignment="Center" 
								           Margin="4,0,4,0"
								           Visibility="{Binding Prefix, Converter={StaticResource NullOrEmptyStringToVisible}}"/>
                                <TextBlock Text="{Binding Path=Label}" FontSize="12" FontWeight="Medium" VerticalAlignment="Center" TextAlignment="Left"/>
                            </StackPanel>

                            <Border Background="Gray" Width="16" Margin="-2,0,3,0"  Grid.Column="1">
                                <TextBlock Text="{Binding Type, Converter={StaticResource CategoryTypeLetterConverter}}" Margin="2,0,2,0" FontWeight="DemiBold" FontStyle="Italic" FontSize="11" Foreground="White" TextAlignment="Center"/>
                            </Border>

                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" x:Name="HoverOn_BeginStoryboard"/>
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsHighlighted" Value="true"/>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard1"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard1"/>
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ComboBoxItemTaxCategory" TargetType="ComboBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientOver" Storyboard.TargetProperty="Opacity" To="0.73"/>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientOver" Storyboard.TargetProperty="Opacity" To="0"/>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0.84"/>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0"/>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid SnapsToDevicePixels="true">
                        <Rectangle x:Name="BackgroundGradientOver" Fill="{DynamicResource MouseOverBrush}" Stroke="{DynamicResource hoverStroke}" RadiusX="2" RadiusY="2"  Opacity="0"/>
                        <Rectangle x:Name="BackgroundGradientSelected" Fill="{DynamicResource WalkaboutToolBoxListBoxItemBrushWhenSelected}" Stroke="{DynamicResource SelectedItemBorderBrush}" RadiusX="2" RadiusY="2" Opacity="0"/>
                        <Rectangle x:Name="BackgroundHighlight" Margin="1" Stroke="#A0FFFFFF" RadiusX="1" RadiusY="1"/>

                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=FormName}"  Opacity=".7" FontSize="10" VerticalAlignment="Center" Margin="4,0,4,0"
								        Visibility="{Binding Prefix, Converter={StaticResource NullOrEmptyStringToVisible}}"/>
                            <TextBlock Text="{Binding Path=Name}" FontSize="12" FontWeight="Medium" VerticalAlignment="Center" TextAlignment="Left"/>
                        </StackPanel>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" x:Name="HoverOn_BeginStoryboard"/>
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsHighlighted" Value="true"/>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard1"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard1"/>
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- back forward buttons-->
    <Storyboard x:Key="AnimPressedColors">
        <ColorAnimation Duration="0:0:0.1" To="#395CB1" Storyboard.TargetName="OuterRimBrush"
                      Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[0].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#005546" Storyboard.TargetName="OuterRimBrush"
                      Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[1].(Color)"/>

        <ColorAnimation Duration="0:0:0.1" To="#0137A5" Storyboard.TargetName="TopLightBrush"
                      Storyboard.TargetProperty="(RadialGradientBrush.GradientStops)[0].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#7BACE6" Storyboard.TargetName="InnerRimBrush"
                      Storyboard.TargetProperty="(SolidColorBrush.Color)"/>

        <ColorAnimation Duration="0:0:0.1" To="#28E7FF" Storyboard.TargetName="BottomLightBrush"
                      Storyboard.TargetProperty="(RadialGradientBrush.GradientStops)[0].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#0139C2" Storyboard.TargetName="BottomLightBrush"
                      Storyboard.TargetProperty="(RadialGradientBrush.GradientStops)[1].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#001176" Storyboard.TargetName="BottomLightBrush"
                      Storyboard.TargetProperty="(RadialGradientBrush.GradientStops)[2].(Color)"/>

        <ColorAnimation Duration="0:0:0.1" To="#4073C2" Storyboard.TargetName="ArrowStrokeBrush"
                      Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[0].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#3A3A96" Storyboard.TargetName="ArrowStrokeBrush"
                      Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[1].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#206DBA" Storyboard.TargetName="ArrowStrokeBrush"
                      Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[2].(Color)"/>
    </Storyboard>
    <Storyboard x:Key="AnimNormalColors">
        <ColorAnimation Duration="0:0:0.1" To="#798FC1" Storyboard.TargetName="OuterRimBrush"
                          Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[0].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#032C7B" Storyboard.TargetName="OuterRimBrush"
                          Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[1].(Color)"/>

        <ColorAnimation Duration="0:0:0.1" To="#477BBC" Storyboard.TargetName="TopLightBrush"
                          Storyboard.TargetProperty="(RadialGradientBrush.GradientStops)[0].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#98BCFF" Storyboard.TargetName="InnerRimBrush"
                      Storyboard.TargetProperty="(SolidColorBrush.Color)"/>

        <ColorAnimation Duration="0:0:0.1" To="#6FDFFF" Storyboard.TargetName="BottomLightBrush"
                      Storyboard.TargetProperty="(RadialGradientBrush.GradientStops)[0].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#377CC6" Storyboard.TargetName="BottomLightBrush"
                      Storyboard.TargetProperty="(RadialGradientBrush.GradientStops)[1].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#123398" Storyboard.TargetName="BottomLightBrush"
                      Storyboard.TargetProperty="(RadialGradientBrush.GradientStops)[2].(Color)"/>

        <ColorAnimation Duration="0:0:0.1" To="#789CCC" Storyboard.TargetName="ArrowStrokeBrush"
                      Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[0].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#2B5592" Storyboard.TargetName="ArrowStrokeBrush"
                      Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[1].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#3190C3" Storyboard.TargetName="ArrowStrokeBrush"
                      Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[2].(Color)"/>
    </Storyboard>
    <Storyboard x:Key="AnimMouseOverColors">
        <ColorAnimation Duration="0:0:0.1" To="#6580BF" Storyboard.TargetName="OuterRimBrush"
                      Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[0].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#1E5AB2" Storyboard.TargetName="OuterRimBrush"
                      Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[1].(Color)"/>

        <ColorAnimation Duration="0:0:0.1" To="#64A8FB" Storyboard.TargetName="TopLightBrush"
                      Storyboard.TargetProperty="(RadialGradientBrush.GradientStops)[0].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#E2F2FF" Storyboard.TargetName="InnerRimBrush"
                      Storyboard.TargetProperty="(SolidColorBrush.Color)"/>

        <ColorAnimation Duration="0:0:0.1" To="#9CFFFF" Storyboard.TargetName="BottomLightBrush"
                      Storyboard.TargetProperty="(RadialGradientBrush.GradientStops)[0].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#32A9FF" Storyboard.TargetName="BottomLightBrush"
                      Storyboard.TargetProperty="(RadialGradientBrush.GradientStops)[1].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#305DD6" Storyboard.TargetName="BottomLightBrush"
                      Storyboard.TargetProperty="(RadialGradientBrush.GradientStops)[2].(Color)"/>

        <ColorAnimation Duration="0:0:0.1" To="#89B8FF" Storyboard.TargetName="ArrowStrokeBrush"
                      Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[0].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#2852BA" Storyboard.TargetName="ArrowStrokeBrush"
                      Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[1].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#4CA8BF" Storyboard.TargetName="ArrowStrokeBrush"
                      Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[2].(Color)"/>
    </Storyboard>
    <Storyboard x:Key="AnimDisabledColors">
        <ColorAnimation Duration="0:0:0.1" To="#ACAEB4" Storyboard.TargetName="OuterRimBrush"
                          Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[0].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#8A8A8A" Storyboard.TargetName="OuterRimBrush"
                          Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[1].(Color)"/>

        <ColorAnimation Duration="0:0:0.1" To="#C2CBD9" Storyboard.TargetName="TopLightBrush"
                          Storyboard.TargetProperty="(RadialGradientBrush.GradientStops)[0].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#FFFFFF" Storyboard.TargetName="InnerRimBrush"
                      Storyboard.TargetProperty="(SolidColorBrush.Color)"/>

        <ColorAnimation Duration="0:0:0.1" To="#EFFFFF" Storyboard.TargetName="BottomLightBrush"
                      Storyboard.TargetProperty="(RadialGradientBrush.GradientStops)[0].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#B3C7D9" Storyboard.TargetName="BottomLightBrush"
                      Storyboard.TargetProperty="(RadialGradientBrush.GradientStops)[1].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#C6C9CE" Storyboard.TargetName="BottomLightBrush"
                      Storyboard.TargetProperty="(RadialGradientBrush.GradientStops)[2].(Color)"/>

        <ColorAnimation Duration="0:0:0.1" To="#CAD0DA" Storyboard.TargetName="ArrowStrokeBrush"
                      Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[0].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#A0A5B0" Storyboard.TargetName="ArrowStrokeBrush"
                      Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[1].(Color)"/>
        <ColorAnimation Duration="0:0:0.1" To="#ADC6CD" Storyboard.TargetName="ArrowStrokeBrush"
                      Storyboard.TargetProperty="(LinearGradientBrush.GradientStops)[2].(Color)"/>
    </Storyboard>

    <Style x:Key="BackButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas Height="24" Width="24">
                        <Ellipse Height="24" Width="24" Canvas.Left="0" Canvas.Top="0">
                            <Ellipse.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1"  x:Name="OuterRimBrush">
                                    <GradientStop Color="#798FC1" Offset="0"/>
                                    <GradientStop Color="#032C7B" Offset="1"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>

                        <!-- the top half -->
                        <Ellipse Height="22" Width="22" Canvas.Left="1" Canvas.Top="1">
                            <Ellipse.Fill>
                                <RadialGradientBrush RadiusX="1" RadiusY="1" GradientOrigin="0.5,.5" x:Name="TopLightBrush" >
                                    <GradientStop Offset=".2" Color="#477BBC"/>
                                    <GradientStop Offset="1" Color="White" />
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>

                        <!-- An inner ring for highlight -->
                        <Ellipse Height="22" Width="22" Canvas.Left="1" Canvas.Top="1" StrokeThickness="1">
                            <Ellipse.Stroke>
                                <SolidColorBrush Color="#98BCFF" x:Name="InnerRimBrush"/>
                            </Ellipse.Stroke>
                            <Ellipse.Clip>
                                <RectangleGeometry Rect="0,0 22,11"/>
                            </Ellipse.Clip>
                        </Ellipse>

                        <!-- the bright light on the bottom pointing up -->
                        <Rectangle Width="22" Height="22" Canvas.Left="1" Canvas.Top="1" >
                            <Rectangle.Clip>
                                <CombinedGeometry GeometryCombineMode="Intersect">
                                    <CombinedGeometry.Geometry1>
                                        <RectangleGeometry Rect="0,11 22,22"/>
                                    </CombinedGeometry.Geometry1>
                                    <CombinedGeometry.Geometry2>
                                        <EllipseGeometry RadiusX="11" RadiusY="11" Center="11,11"/>
                                    </CombinedGeometry.Geometry2>
                                </CombinedGeometry>
                            </Rectangle.Clip>
                            <Rectangle.Fill>
                                <RadialGradientBrush RadiusX="1" RadiusY="1" GradientOrigin="0.5,1" x:Name="BottomLightBrush">
                                    <GradientStop Offset=".1" Color="#6FDFFF"/>
                                    <GradientStop Offset=".5" Color="#377CC6"/>
                                    <GradientStop Offset="1" Color="#123398"/>
                                </RadialGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Path Canvas.Left="1">
                            <Path.Stroke>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Name="ArrowStrokeBrush">
                                    <GradientStop Color="#789CCC" Offset="0"/>
                                    <GradientStop Color="#2B5592" Offset=".5"/>
                                    <GradientStop Color="#3190C3" Offset="1"/>
                                </LinearGradientBrush>
                            </Path.Stroke>
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsFilled="True" IsClosed="True" StartPoint="3,12">
                                        <LineSegment Point="9,6"/>
                                        <ArcSegment Point="12,8" SweepDirection="Clockwise" Size="2,2"/>
                                        <LineSegment Point="9.5,10.5"/>
                                        <LineSegment Point="17,10.5"/>
                                        <ArcSegment Point="17,14" SweepDirection="Clockwise" Size="2,2"/>
                                        <LineSegment Point="9.5,14"/>
                                        <LineSegment Point="12,16"/>
                                        <ArcSegment Point="9,18" SweepDirection="Clockwise" Size="2,2"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <Path Canvas.Left="1">
                            <Path.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Name="ArrowFillBrush">
                                    <GradientStop Color="White" Offset=".4"/>
                                    <GradientStop Color="#C6C6C6" Offset="1"/>
                                </LinearGradientBrush>
                            </Path.Fill>
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsFilled="True" IsClosed="True" StartPoint="3,12">
                                        <LineSegment Point="9,6"/>
                                        <ArcSegment Point="12,8" SweepDirection="Clockwise" Size="2,2"/>
                                        <LineSegment Point="9.5,10.5"/>
                                        <LineSegment Point="17,10.5"/>
                                        <ArcSegment Point="17,14" SweepDirection="Clockwise" Size="2,2"/>
                                        <LineSegment Point="9.5,14"/>
                                        <LineSegment Point="12,16"/>
                                        <ArcSegment Point="9,18" SweepDirection="Clockwise" Size="2,2"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Canvas>

                    <ControlTemplate.Triggers>
                        <!-- 
              Note: triggers later in this list have highest precidence, therefore we do not want
              an exit action in the IsPressed and IsEnabled exit actions because they would override
              the AnimNormalColors set in the MultiTrigger.  That's why we use StopStoryboard.  But
              we do want their EnterActions to override - IsPressed has higher precidence than IsMouseOver,
              and IsEnabled=False has even higher precidence.
              -->

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource AnimMouseOverColors}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource AnimNormalColors}"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="ShowPressedColors" Storyboard="{StaticResource AnimPressedColors}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="ShowPressedColors"/>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="ShowDisabledColors" Storyboard="{StaticResource AnimDisabledColors}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="ShowDisabledColors"/>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ForwardButton" TargetType="{x:Type Button}" >
        <!--<Setter Property="OverridesDefaultStyle" Value="True" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas Height="24" Width="24">
                        <Ellipse Height="24" Width="24" Canvas.Left="0" Canvas.Top="0">
                            <Ellipse.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Name="OuterRimBrush">
                                    <GradientStop Color="#798FC1" Offset="0"/>
                                    <GradientStop Color="#032C7B" Offset="1"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <!-- the top half -->
                        <Ellipse Height="22" Width="22" Canvas.Left="1" Canvas.Top="1">
                            <Ellipse.Fill>
                                <RadialGradientBrush RadiusX="1" RadiusY="1" GradientOrigin="0.5,.5" x:Name="TopLightBrush" >
                                    <GradientStop Offset=".2" Color="#477BBC"/>
                                    <GradientStop Offset="1" Color="White" />
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>

                        <!-- An inner ring for highlight -->
                        <Ellipse Height="22" Width="22" Canvas.Left="1" Canvas.Top="1" StrokeThickness="1">
                            <Ellipse.Stroke>
                                <SolidColorBrush Color="#98BCFF" x:Name="InnerRimBrush"/>
                            </Ellipse.Stroke>
                            <Ellipse.Clip>
                                <RectangleGeometry Rect="0,0 22,11"/>
                            </Ellipse.Clip>
                        </Ellipse>

                        <!-- the bright light on the bottom pointing up -->
                        <Rectangle Width="22" Height="22" Canvas.Left="1" Canvas.Top="1" >
                            <Rectangle.Clip>
                                <CombinedGeometry GeometryCombineMode="Intersect">
                                    <CombinedGeometry.Geometry1>
                                        <RectangleGeometry Rect="0,11 22,22"/>
                                    </CombinedGeometry.Geometry1>
                                    <CombinedGeometry.Geometry2>
                                        <EllipseGeometry RadiusX="11" RadiusY="11" Center="11,11"/>
                                    </CombinedGeometry.Geometry2>
                                </CombinedGeometry>
                            </Rectangle.Clip>
                            <Rectangle.Fill>
                                <RadialGradientBrush RadiusX="1" RadiusY="1" GradientOrigin="0.5,1" x:Name="BottomLightBrush">
                                    <GradientStop Offset=".1" Color="#6FDFFF"/>
                                    <GradientStop Offset=".5" Color="#377CC6"/>
                                    <GradientStop Offset="1" Color="#123398"/>
                                </RadialGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <Path Canvas.Left="1">
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX="-1" ScaleY="1"  CenterX="11" CenterY="11"/>
                            </Path.RenderTransform>
                            <Path.Stroke>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Name="ArrowStrokeBrush">
                                    <GradientStop Color="#789CCC" Offset="0"/>
                                    <GradientStop Color="#2B5592" Offset=".5"/>
                                    <GradientStop Color="#3190C3" Offset="1"/>
                                </LinearGradientBrush>
                            </Path.Stroke>
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsFilled="True" IsClosed="True" StartPoint="3,12">
                                        <LineSegment Point="9,6"/>
                                        <ArcSegment Point="12,8" SweepDirection="Clockwise" Size="2,2"/>
                                        <LineSegment Point="9.5,10.5"/>
                                        <LineSegment Point="17,10.5"/>
                                        <ArcSegment Point="17,14" SweepDirection="Clockwise" Size="2,2"/>
                                        <LineSegment Point="9.5,14"/>
                                        <LineSegment Point="12,16"/>
                                        <ArcSegment Point="9,18" SweepDirection="Clockwise" Size="2,2"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <Path Canvas.Left="1" x:Name="Arrow">
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX="-1" ScaleY="1" CenterX="11" CenterY="11"/>
                            </Path.RenderTransform>
                            <Path.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Name="ArrowFillBrush">
                                    <GradientStop Color="White" Offset=".4"/>
                                    <GradientStop Color="#C6C6C6" Offset="1"/>
                                </LinearGradientBrush>
                            </Path.Fill>
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsFilled="True" IsClosed="True" StartPoint="3,12">
                                        <LineSegment Point="9,6"/>
                                        <ArcSegment Point="12,8" SweepDirection="Clockwise" Size="2,2"/>
                                        <LineSegment Point="9.5,10.5"/>
                                        <LineSegment Point="17,10.5"/>
                                        <ArcSegment Point="17,14" SweepDirection="Clockwise" Size="2,2"/>
                                        <LineSegment Point="9.5,14"/>
                                        <LineSegment Point="12,16"/>
                                        <ArcSegment Point="9,18" SweepDirection="Clockwise" Size="2,2"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Canvas>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource AnimMouseOverColors}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource AnimNormalColors}"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="ShowPressedColors" Storyboard="{StaticResource AnimPressedColors}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="ShowPressedColors"/>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="ShowDisabledColors" Storyboard="{StaticResource AnimDisabledColors}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="ShowDisabledColors"/>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <views:ZeroToBrushConverter x:Key="ZeroToBrushConverter" />

    <Style x:Key="HistoryBackForward" TargetType="{x:Type GroupBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Canvas x:Name="HistoryButtons">
                        <Button x:Name="BackButton" Command="p:AppCommands.CommandBack" IsEnabled="True" Style="{DynamicResource BackButton}" 
								Canvas.Top="0" Canvas.Left="2"/>
                        <Button x:Name="ForwardButton" Command="p:AppCommands.CommandForward" IsEnabled="True"  Style="{DynamicResource ForwardButton}" 
								Canvas.Top="0" Canvas.Left="27" />
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RentalChartExpenseDistribution" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="Background" Value="{DynamicResource BrushForRentalExpense}"/>
    </Style>

    <Style x:Key="SubExpensesText" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="Thin"/>
    </Style>

    <LinearGradientBrush x:Key="BrushForRentalExpense" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#BB7676" />
        <GradientStop Color="#800101" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BrushForRentalIncome" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#7676BB" />
        <GradientStop Color="#010180" Offset="1" />
    </LinearGradientBrush>

    <!-- This resource dictionary contains default themes for Windows 8 -->
    <ControlTemplate x:Key="DropDownControlTemplate" TargetType="{x:Type ToggleButton}">
        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="border" SnapsToDevicePixels="True">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" 
                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"                                   
                                  HorizontalAlignment="Center" VerticalAlignment="Center" 
                                  Margin="{TemplateBinding Padding}"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" 
                                  Focusable="False" x:Name="contentPresenter"/>

                <Polygon Margin="4,0,4,0" Points="0,0 7,0 3.5,4" VerticalAlignment="Center" Grid.Column="1" SnapsToDevicePixels="True"
                       HorizontalAlignment="Right">
                    <Polygon.Fill>
                        <SolidColorBrush x:Name="ArrowHeadBrush" Color="#FF000000"/>
                    </Polygon.Fill>
                </Polygon>
            </Grid>

        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted">
                <Setter Property="Border.BorderBrush" TargetName="border">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver">
                <Setter Property="Panel.Background" TargetName="border">
                    <Setter.Value>
                        <SolidColorBrush>#FFBEE6FD</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="border">
                    <Setter.Value>
                        <SolidColorBrush>#FF3C7FB1</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed">
                <Setter Property="Panel.Background" TargetName="border" Value="{DynamicResource ButtonMousePressedBackground}"/>
                <Setter Property="Border.BorderBrush" TargetName="border">
                    <Setter.Value>
                        <SolidColorBrush>#FF2C628B</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled">
                <Setter Property="Panel.Background" TargetName="border">
                    <Setter.Value>
                        <SolidColorBrush>#FFF4F4F4</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="border">
                    <Setter.Value>
                        <SolidColorBrush>#FFADB2B5</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter">
                    <Setter.Value>
                        <SolidColorBrush>#FF838383</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                </Trigger.Value>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Define a Drawing as a resource that can be used as content for a Tiled DrawingBrush to get the Blend backdop effect. -->
    <DrawingGroup x:Key="CheckerBoxBackground">
        <GeometryDrawing Brush="#5B5B5B">
            <!-- Brush="#2B3C59">-->
            <GeometryDrawing.Geometry>
                <RectangleGeometry Rect="0,0,1,1"/>
            </GeometryDrawing.Geometry>
        </GeometryDrawing>
        <GeometryDrawing Brush="#565656">
            <!-- Dark-->
            <GeometryDrawing.Geometry>
                <RectangleGeometry Rect="1,0,1,1" />
            </GeometryDrawing.Geometry>
        </GeometryDrawing>
        <GeometryDrawing Brush="#5B5B5B">
            <GeometryDrawing.Geometry>
                <RectangleGeometry Rect="1,1,1,1" />
            </GeometryDrawing.Geometry>
        </GeometryDrawing>
        <GeometryDrawing Brush="#565656">
            <!-- Dark-->
            <GeometryDrawing.Geometry>
                <RectangleGeometry Rect="0,1,1,1" />
            </GeometryDrawing.Geometry>
        </GeometryDrawing>
    </DrawingGroup>

    <Style x:Key="MainBorderForSplitterViewStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Opacity="0.5" ShadowDepth="10" BlurRadius="13"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- The following are used in toolbar icons -->
    <SolidColorBrush x:Key="ToolbarIconBrush" Color="#2C5BC1"/>

    <DrawingImage x:Key="SplitIcon" >
        <DrawingImage.Drawing>
            <DrawingGroup >
                <GeometryDrawing Brush="Transparent" >
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource ToolbarIconBrush}" Thickness="1" EndLineCap="Round" StartLineCap="Round" LineJoin="Round" />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigure StartPoint="0,0" IsClosed="True" IsFilled="True" >
                                    <LineSegment Point="10,0"/>
                                    <LineSegment Point="10,5"/>
                                    <LineSegment Point="5,8"/>
                                    <LineSegment Point="0,5"/>
                                </PathFigure>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </GeometryDrawing.Geometry>

                </GeometryDrawing>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>

    <DrawingImage x:Key="SplitIconFilled" >
        <DrawingImage.Drawing>
            <DrawingGroup >
                <GeometryDrawing Brush="{DynamicResource ToolbarIconBrush}" >
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource ToolbarIconBrush}" Thickness="1" EndLineCap="Round" StartLineCap="Round" LineJoin="Round" />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigure StartPoint="0,0" IsClosed="True" IsFilled="True" >
                                    <LineSegment Point="10,0"/>
                                    <LineSegment Point="10,5"/>
                                    <LineSegment Point="5,8"/>
                                    <LineSegment Point="0,5"/>
                                </PathFigure>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </GeometryDrawing.Geometry>

                </GeometryDrawing>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>

    <DrawingImage x:Key="ThreeLines" >
        <DrawingImage.Drawing>
            <DrawingGroup >
                <GeometryDrawing  >
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource ToolbarIconBrush}" Thickness="2" />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <LineGeometry StartPoint="2,2" EndPoint="14,2" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing >
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource ToolbarIconBrush}" Thickness="2" />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <LineGeometry StartPoint="2,8" EndPoint="14,8"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing >
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource ToolbarIconBrush}" Thickness="2" />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <LineGeometry StartPoint="2,14" EndPoint="14,14"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>

    <DrawingImage x:Key="OneLine">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <GeometryDrawing >
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource ToolbarIconBrush}" Thickness="2" />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <LineGeometry StartPoint="2,8" EndPoint="14,8"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>


    <DrawingImage x:Key="CollapseAllIcon" >
        <DrawingImage.Drawing>
            <DrawingGroup  >
                <GeometryDrawing  >
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource ToolbarIconBrush}" Thickness="1" />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigure StartPoint="4,0" IsClosed="False" IsFilled="False">
                                    <LineSegment Point="12,0"/>
                                    <LineSegment Point="12,8"/>
                                </PathFigure>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing >
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource ToolbarIconBrush}" Thickness="1" />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigure StartPoint="2,2" IsClosed="False" IsFilled="False">
                                    <LineSegment Point="10,2"/>
                                    <LineSegment Point="10,10"/>
                                </PathFigure>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing >
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource ToolbarIconBrush}" Thickness="2"  />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="-.5,4.5,8,8" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing >
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource ToolbarIconBrush}" Thickness="1" />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <LineGeometry StartPoint="1.5,8.5" EndPoint="5.5,8.5"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>

    <DrawingImage x:Key="ExpandAllIcon" >
        <DrawingImage.Drawing>
            <DrawingGroup  >
                <GeometryDrawing  >
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource ToolbarIconBrush}" Thickness="1" />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigure StartPoint="4,0" IsClosed="False" IsFilled="False">
                                    <LineSegment Point="12,0"/>
                                    <LineSegment Point="12,8"/>
                                </PathFigure>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing >
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource ToolbarIconBrush}" Thickness="1" />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigure StartPoint="2,2" IsClosed="False" IsFilled="False">
                                    <LineSegment Point="10,2"/>
                                    <LineSegment Point="10,10"/>
                                </PathFigure>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing >
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource ToolbarIconBrush}" Thickness="2"  />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="-.5,4.5,8,8" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing >
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource ToolbarIconBrush}" Thickness="1" />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <LineGeometry StartPoint="1.5,8.5" EndPoint="5.5,8.5"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing >
                    <GeometryDrawing.Pen>
                        <Pen Brush="{DynamicResource ToolbarIconBrush}" Thickness="1" />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <LineGeometry StartPoint="3.5,6.5" EndPoint="3.5,10.5"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>


</ResourceDictionary>