<UserControl x:Class="Walkabout.Views.Controls.BalanceControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:c="clr-namespace:Walkabout.Controls"
             xmlns:local="clr-namespace:Walkabout.Views.Controls"  
             xmlns:help="clr-namespace:Walkabout.Help"
             help:HelpService.HelpKeyword="Balancing Accounts"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="350" Background="WhiteSmoke">

  <UserControl.Resources>

        <Style x:Key="NumericTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="c:CalculatorPopup.CalculatorEnabled" Value="True" />
        </Style>

        <Style x:Key="Rows" TargetType="Border">
      <Setter Property="MinWidth" Value="160"/>
      <Setter Property="HorizontalAlignment" Value="Center"/>
      <Setter Property="Margin" Value="5,2,5,2"/>
      <Setter Property="Padding" Value="5,5,5,5"/>
      <Setter Property="BorderThickness" Value="0.5,0.5,2,2"/>
      <Setter Property="BorderBrush" Value="Gray"/>
      <Setter Property="CornerRadius" Value="3"/>
      <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <Style x:Key="ReadOnlyTextBox" TargetType="TextBox">
      <Setter Property="TextAlignment" Value="Right"/>
      <Setter Property="IsReadOnly" Value="True"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="Padding" Value="2"/>
    </Style>

    <Style x:Key="ValueAreaBorder" TargetType="Border">
      <Setter Property="Margin" Value="10,2,2,2"/>
    </Style>

  </UserControl.Resources>

  <StackPanel >
    <Border Style="{StaticResource Rows}" Margin="0" BorderThickness="0">
      <TextBox Style="{StaticResource ReadOnlyTextBox}" Text="name (number) what happens when this gets long" x:Name="AccountInfo" FontWeight="Bold"  TextAlignment="Center"/>
    </Border>

    <Border Style="{StaticResource Rows}" >

      <StackPanel>
        <TextBlock Text="Previous reconcilation:"  />

        <Border Style="{StaticResource ValueAreaBorder}">
          <StackPanel>
            <ComboBox x:Name="ComboBoxPreviousReconcileDates" Text="3/4/2010" 
                                  ToolTip="You can select previous statement dates to see which transactions where reconciled in those statements.
This is handy if you need to go back and fix any mistakes in prior reconciliations.
For example, you can use this to swap out a reconciled transaction for another of the same amount since you cannot delete reconciled transactions."/>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Button x:Name="PreviousBalanceHelp" Click="PreviousBalanceHelp_Click">
                <Image Source="/MyMoney;component/Icons/Help.png" />
              </Button>
              <TextBox x:Name="TextBlockPreviousBalance" Text="24.96" Style="{StaticResource ReadOnlyTextBox}"  Grid.Column="1"  
                       ToolTip="The current reconciled balance of your account should match the beginning balance on your statement.
If it doesn't then you may need to rebalance previous months to correct the problem, or for now you can just edit this
field and fix the previous statements later.  You can browse previous statements by selecting a date from the previous
reconciliation dropdown above."/>
            </Grid>
          </StackPanel>
        </Border>

      </StackPanel>
    </Border>

    <Border Style="{StaticResource Rows}" >

      <StackPanel>

        <TextBlock Text="New statement:"  />

        <Border Style="{StaticResource ValueAreaBorder}">
          <StackPanel>
            <c:MoneyDatePicker x:Name="StatementDatePicker"  BorderThickness="1" HorizontalContentAlignment="Right" 
                                    ToolTip="Enter the correct statement date and it will use that date to estimate your statement balance."  />

            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>

              <Button x:Name="ValueSign" Visibility="Collapsed" Grid.Column="0" Background="Yellow" Click="OnBalanceValueSign_Clicked">
                <Image Source="/MyMoney;component/Dialogs/Icons/Warning.png" />
              </Button>

              <TextBox x:Name="TextBoxStatementBalance" Grid.Column="1" Text="24.96"  HorizontalContentAlignment="Right" TextChanged="TextBoxStatementBalance_TextChanged"
                       KeyDown="TextBoxStatementBalance_KeyDown"
                       Style="{StaticResource NumericTextBoxStyle}"  GotFocus="OnTextBoxGotFocus"
                       ToolTip="Enter the correct statement balance in case the calculated estimate was not correct."  />
            </Grid>
          </StackPanel>
        </Border>
      </StackPanel>
    </Border>

    <Border Style="{StaticResource Rows}" >
      <StackPanel>
        <TextBlock Text="Interest earned:" />
        <Border Style="{StaticResource ValueAreaBorder}">
                    <TextBox x:Name="TextBoxInterestEarned" Text="1.96" HorizontalContentAlignment="Right"
                             GotFocus="OnTextBoxGotFocus"
                       Style="{StaticResource NumericTextBoxStyle}"  
                         ToolTip="Enter the interest earned this month and press 'TAB' to add the matching interest transaction"  />
        </Border>
      </StackPanel>
    </Border>

    <Border Style="{StaticResource Rows}"  >

      <StackPanel>
        <TextBlock Text="Your current balance:"   />
        <Border Style="{StaticResource ValueAreaBorder}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="CurrentBalanceHelp" Click="CurrentBalanceHelp_Click">
              <Image Source="/MyMoney;component/Icons/Help.png" />
            </Button>
            <TextBox x:Name="TextBlockCurrentBalance" Text="24.96" Style="{StaticResource ReadOnlyTextBox}"  Grid.Column="1"
                           ToolTip="When the current balance matches the statement balance above you can click the 'Done' button"/>
          </Grid>
        </Border>

        <TextBlock Text="Off by:"   />
        <Border Style="{StaticResource ValueAreaBorder}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="CurrentDeltaHelp" Click="CurrentDeltaHelp_Click">
              <Image Source="/MyMoney;component/Icons/Help.png" />
            </Button>
            <TextBox x:Name="TextBlockCurrentDelta" Text="1.99" Style="{StaticResource ReadOnlyTextBox}"  Grid.Column="1"
                           ToolTip="The current difference between your reported balance and the current balance on record.
When this reaches zero you are done balancing this account and you can click the 'Done' button"/>
          </Grid>
        </Border>

      </StackPanel>
    </Border>

    <StackPanel  HorizontalAlignment="Center" Orientation="Horizontal" >
      <Button x:Name="Done" MinWidth="70" Margin="3" Click="Done_Click"
                    ToolTip="Click done when you have finished balancing your account. 
This button will be enabled when the current balance matches the statement balance">Done</Button>
      <Button x:Name="Cancel" MinWidth="70" Margin="3" Click="Cancel_Click">Cancel</Button>
    </StackPanel>

    <Grid Margin="10" >
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <TextBox x:Name="TextBlockMessage" Style="{StaticResource ReadOnlyTextBox}" Text="You can select previous statement dates to see which transactions where reconciled in those statements.
This is handy if you need to go back and fix any mistakes in prior reconciliations.
For example, you can use this to swap out a reconciled transaction for another of the same amount since you cannot delete reconciled transactions." AcceptsReturn="False" TextWrapping="Wrap" TextAlignment="Left" Grid.Column="1"/>

      <!-- Big checkbox -->
      <Button x:Name="CongratsButton" Click="Done_Click" HorizontalAlignment="Center" Padding="0" BorderThickness="0" Margin="0,0,10,0">
        <Button.Template>
          <ControlTemplate>
            <Grid Height="80" Width="80" >
              <Rectangle StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" Stroke="#F0565656" StrokeThickness="10" StrokeMiterLimit="10" StrokeLineJoin="Miter" Fill="#FFBABABA" Grid.ColumnSpan="2">
                <Rectangle.Effect>
                  <DropShadowEffect/>
                </Rectangle.Effect>
              </Rectangle>
              <Path Data="M132.76504,184.31341 C149.02845,213.3649 148.49972,224.50005 187.49979,261.50005 198.49981,249.50012 264.49987,65.49896 267.49995,73.499369 273.82965,90.379028 279.73021,134.49962 303.5,134.49962 276.50001,155.49973 225.74392,255.96528 188.0772,314.6321 165.50004,277.50007 144.7655,278.31394 117.76539,256.31391 126.53438,253.77058 127.32629,224.3786 132.76504,184.31341 z" 
			            Margin="20,0,0,20"
			            StrokeStartLineCap="Flat" 
			            Stretch="Fill" 
			            StrokeEndLineCap="Flat" StrokeThickness="6" StrokeMiterLimit="10" StrokeLineJoin="Miter" UseLayoutRounding="False" Grid.ColumnSpan="2">
                <Path.Effect>
                  <DropShadowEffect Opacity="0.455" BlurRadius="7" ShadowDepth="19"/>
                </Path.Effect>
                <Path.Fill>
                  <LinearGradientBrush EndPoint="0.901,0.791" StartPoint="0.038,0.372">
                    <GradientStop Color="#FF4E7A12" Offset="0.306"/>
                    <GradientStop Color="#FF8BC042" Offset="0.788"/>
                    <GradientStop Color="#FFAEE465" Offset="0.578"/>
                  </LinearGradientBrush>
                </Path.Fill>
              </Path>
            </Grid>
          </ControlTemplate>
        </Button.Template>        
      </Button>
    </Grid>
  </StackPanel>

</UserControl>
