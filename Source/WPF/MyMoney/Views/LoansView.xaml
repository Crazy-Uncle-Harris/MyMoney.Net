<UserControl x:Class="Walkabout.Views.LoansView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:dat="clr-namespace:System.Windows.Data;assembly=PresentationFramework" 
    xmlns:control="clr-namespace:System.Windows.Controls.Primitives;assembly=PresentationFramework" 
    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:c="clr-namespace:Walkabout.WpfConverters"
    xmlns:local="clr-namespace:Walkabout.Controls"
    xmlns:views="clr-namespace:Walkabout.Views"
    xmlns:help="clr-namespace:Walkabout.Help"
    help:HelpService.HelpKeyword="Loans"
    mc:Ignorable="d" 
    d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>

        <!-- CONVERTERS -->
        <c:BoolToVisibilityConverter x:Key="boolToVis" />
        <views:ZeroToOpacityConverter x:Key="ZeroToOpacityConverter"/>

        <!--STYLE FOR COLUMNHEADER -->
        <Style x:Key="ColumnHeaderStyleCenter"  TargetType="control:DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <Style x:Key="ColumnHeaderStyleRight"  TargetType="control:DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
        </Style>



        <Style TargetType="{x:Type FrameworkElement}" 
				x:Key="GridEditStyle">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Visibility" 
				Value="{Binding Path=IsSelected, 
						RelativeSource={RelativeSource FindAncestor, 
						AncestorType={x:Type ListViewItem}},
						Converter={StaticResource boolToVis}, 
						ConverterParameter=True}" />
        </Style>


        <Style x:Key="MyDataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border x:Name="CellBorder"
								BorderBrush="{TemplateBinding BorderBrush}"  
								BorderThickness="0" 
								SnapsToDevicePixels="True">

                            <ContentPresenter  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" Value="{DynamicResource ListItemSelectedBackgroundBrush}" TargetName="CellBorder"/>
                                <Setter Property="Foreground" Value="{DynamicResource ListItemSelectedForegroundBrush}"/>
                            </Trigger>

                            <!--<DataTrigger Binding="{Binding Path=IsReadOnly}" Value="True">
								<Setter Property="Foreground" Value="Gray"/>
															   <Setter Property="IsEnabled" Value="False"/>
							</DataTrigger>-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- GROUPING LOGIC for the LISTVIEW -->
        <CollectionViewSource x:Key="ByYear" >
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Year"/>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>


        <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">

                        <!--<Expander IsExpanded="True">
                            <Expander.Header>-->
                        <Border CornerRadius="5,5,0,0" BorderBrush="Black" BorderThickness=".5" SnapsToDevicePixels="False" Margin="3,3,3,0" Padding="3">
                            <StackPanel Background="White">
                                <TextBlock Text="{Binding Items[0].Year}" TextAlignment="Left" FontSize="20" Margin="8,8,0,3"/>

                                <ItemsPresenter />
                            </StackPanel>
                        </Border>
                        <!--</Expander.Header>
                            <ItemsPresenter />
                        </Expander>-->

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!-- DATE -->
        <DataTemplate x:Key="myTemplateDate">
            <Border Margin="10,0,0,0" BorderThickness="0" Background="Transparent" Focusable="false" VerticalAlignment="Stretch">
                <TextBlock Text="{Binding Date,StringFormat={}{0:d}}"  MinWidth="100" VerticalAlignment="Center"/>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="myTemplateDateEdit">
            <!-- the border makes the whole column hittable -->
            <Border Margin="10,0,0,0" BorderThickness="0,0,0,0" Background="Transparent" Focusable="false" VerticalAlignment="Stretch">
                <local:MoneyDatePicker SelectedDate="{Binding Date}" SelectedDateFormat="Short" MinWidth="100" VerticalAlignment="Center"/>
            </Border>
        </DataTemplate>


        <!-- SOURCE -->
        <DataTemplate x:Key="myTemplateSource">
            <Border BorderThickness="0" Background="Transparent" Focusable="false" VerticalAlignment="Stretch">
                <TextBlock Text="{Binding Source}" MinWidth="100" VerticalAlignment="Center" Opacity=".6"/>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="myTemplateSourceEdit">
            <Border BorderThickness="0,0,0,0" Background="Transparent" Focusable="false" VerticalAlignment="Stretch">
                <TextBox Text="{Binding Source}" MinWidth="100" VerticalAlignment="Center"/>
            </Border>
        </DataTemplate>


        <!-- THE PAYMENT -->
        <DataTemplate x:Key="myTemplatePayment" >
            <!-- the border makes the whole column hittable -->
            <Border BorderThickness="0,0,0,0" Background="Transparent" Focusable="false" VerticalAlignment="Stretch">
                <TextBlock Text="{Binding Payment, StringFormat={}{0:N}}" TextAlignment="Right" VerticalAlignment="Center" Opacity=".80" />
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="myTemplatePaymentlEdit">
            <TextBox    Style="{StaticResource NumericTextBoxStyle}"
						Text="{Binding Payment, StringFormat={}{0:N}, Mode=TwoWay}"
						FontSize="14"
						TextAlignment="Right" VerticalAlignment="Center" />
        </DataTemplate>

        <!-- PRINCIPAL -->
        <DataTemplate x:Key="myTemplatePrincipal">
            <TextBlock  Text="{Binding Principal, StringFormat={}{0:N}}"     
						Opacity="{Binding Principal, Converter={StaticResource ZeroToOpacityConverter}}"
						FontSize="14"
						TextAlignment="Right" VerticalAlignment="Center" />
        </DataTemplate>

        <DataTemplate x:Key="myTemplatePrincipalEdit">
            <TextBox    Grid.Column="1" Style="{StaticResource NumericTextBoxStyle}"
						Text="{Binding Principal, StringFormat={}{0:N}, Mode=TwoWay}"
						FontSize="14"
						TextAlignment="Right" VerticalAlignment="Center"/>
        </DataTemplate>


        <!-- INTEREST -->
        <DataTemplate x:Key="myTemplateInterest" >
            <TextBlock  Grid.Column="1" Text="{Binding Interest, StringFormat={}{0:N}}"    
						Opacity="{Binding Interest, Converter={StaticResource ZeroToOpacityConverter}}"
						FontSize="14"
						TextAlignment="Right" VerticalAlignment="Center" />
        </DataTemplate>

        <DataTemplate x:Key="myTemplateInterestEdit">
            <Grid VerticalAlignment="Stretch" Background="Transparent" Focusable="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>


                <TextBox    Grid.Column="1" Style="{StaticResource NumericTextBoxStyle}"
							Text="{Binding Interest, StringFormat={}{0:N}, Mode=TwoWay}"
							FontSize="14"
							TextAlignment="Right" VerticalAlignment="Center"/>
            </Grid>

        </DataTemplate>


        <!-- PERCENTAGE OF INTEREST -->
        <DataTemplate x:Key="myTemplatePercentage">
            <TextBlock  Grid.Column="1" Text="{Binding Percentage, StringFormat={}{0:0.0000}}"                            
						Opacity="{Binding Percentage, Converter={StaticResource ZeroToOpacityConverter}}"
						FontSize="14"
						FontStyle="Italic"
						TextAlignment="Right" VerticalAlignment="Center" />
        </DataTemplate>

        <DataTemplate x:Key="myTemplatePercentageEdit">
            <Grid VerticalAlignment="Stretch" Background="Transparent" Focusable="False" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>


                <TextBox    Grid.Column="1" 
							Text="{Binding Percentage, Mode=TwoWay}"
							FontSize="14"
							TextAlignment="Right" VerticalAlignment="Center"/>
            </Grid>

        </DataTemplate>


        <!-- BALANCE -->
        <DataTemplate x:Key="myTemplateBalance">
            <TextBlock  Grid.Column="1" Text="{Binding Balance, StringFormat={}{0:N}}"                            
						Opacity=".6"
						TextAlignment="Right" VerticalAlignment="Center" HorizontalAlignment="Right"/>
        </DataTemplate>
    </UserControl.Resources>

    <UserControl.ContextMenu>
        <ContextMenu>
            <MenuItem Name="menuItemGotoRelated" Header="_Go to related transaction" Command="views:LoansView.CommandGotoRelatedTransaction" InputGestureText="F12"/>
            <Separator/>
            <MenuItem Name="menuItemExport" Header="Export..." Command="views:TransactionsView.CommandViewExport"/>
        </ContextMenu>
    </UserControl.ContextMenu>


    <UserControl.CommandBindings>
        <CommandBinding Command="views:LoansView.CommandGotoRelatedTransaction" Executed="OnCommandGotoRelatedTransaction" />
        <CommandBinding Command="views:TransactionsView.CommandViewExport" Executed="OnCommandViewExport" />
    </UserControl.CommandBindings>


    <UserControl.InputBindings>
        <KeyBinding Command="views:LoansView.CommandGotoRelatedTransaction" Key="F12" />
    </UserControl.InputBindings>

    <Grid  >

        <DataGrid x:Name="TheDataGrid" 
            ItemsSource="{Binding Source={StaticResource ByYear}}"
            RowHeaderWidth="0"
            CanUserSortColumns="False"
            CellStyle="{StaticResource MyDataGridCellStyle}"
            AutoGenerateColumns="False"  
            InitializingNewItem="TheDataGrid_InitializingNewItem" 
            BeginningEdit="TheDataGrid_BeginningEdit" 
            RowEditEnding="TheDataGrid_RowEditEnding" 
            CommandManager.PreviewExecuted="TheDataGrid_PreviewExecuted"
            KeyDown="TheDataGrid_KeyDown" >

            <DataGrid.GroupStyle>
                <GroupStyle ContainerStyle="{StaticResource GroupHeaderStyle}">
                    <GroupStyle.Panel>
                        <ItemsPanelTemplate>
                            <DataGridRowsPresenter/>
                        </ItemsPanelTemplate>
                    </GroupStyle.Panel>
                </GroupStyle>
            </DataGrid.GroupStyle>

            <DataGrid.Columns>

                <!-- DATE -->
                <DataGridTemplateColumn Header="Date"  CellTemplate="{StaticResource myTemplateDate}" CellEditingTemplate="{StaticResource myTemplateDateEdit}"
										SortMemberPath="Date" SortDirection="Ascending"/>

                <!-- SOURCE -->
                <DataGridTemplateColumn Header="Source"  
										HeaderStyle="{StaticResource ColumnHeaderStyleCenter}"
										CellTemplate="{StaticResource myTemplateSource}" CellEditingTemplate="{StaticResource myTemplateSourceEdit}"
										MinWidth="150"
										SortMemberPath="Payment"/>

                <!-- Payment -->
                <DataGridTemplateColumn Header="Payment"
										HeaderStyle="{StaticResource ColumnHeaderStyleRight}" 
										CellTemplate="{StaticResource myTemplatePayment}" CellEditingTemplate="{StaticResource myTemplatePaymentlEdit}"
										MinWidth="100"
										SortMemberPath="Payment"/>

                <!-- PRINCIPAL -->
                <DataGridTemplateColumn Header="Principal"  
										HeaderStyle="{StaticResource ColumnHeaderStyleRight}"
										CellTemplate="{StaticResource myTemplatePrincipal}" CellEditingTemplate="{StaticResource myTemplatePrincipalEdit}"
										MinWidth="80"
										SortMemberPath="Principal"/>

                <!-- INTEREST -->
                <DataGridTemplateColumn Header="Interest"  
										HeaderStyle="{StaticResource ColumnHeaderStyleRight}"
										CellTemplate="{StaticResource myTemplateInterest}" CellEditingTemplate="{StaticResource myTemplateInterestEdit}"
										MinWidth="80"
										SortMemberPath="Interest"/>

                <!-- % -->
                <DataGridTemplateColumn Header="%" HeaderStyle="{StaticResource ColumnHeaderStyleCenter}"  CellTemplate="{StaticResource myTemplatePercentage}" CellEditingTemplate="{StaticResource myTemplatePercentageEdit}"
										MinWidth="60"
										SortMemberPath="Percentage"/>


                <!-- BALANCE -->
                <DataGridTemplateColumn Header="Balance"  IsReadOnly="True" 
										HeaderStyle="{StaticResource ColumnHeaderStyleRight}"
										CellTemplate="{StaticResource myTemplateBalance}" MinWidth="100"
										/>

            </DataGrid.Columns>

        </DataGrid>


        <!--<Grid.ContextMenu>
			<ContextMenu Name="cm">
				<MenuItem Header="_Add New Year" Click="MenuItem_Click" />
			</ContextMenu>
		</Grid.ContextMenu>-->

    </Grid>

</UserControl>
