<UserControl x:Class="Walkabout.Views.CurrenciesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Walkabout.Controls"
             xmlns:c="clr-namespace:Walkabout.WpfConverters"
             xmlns:views="clr-namespace:Walkabout.Views"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
  <UserControl.Resources>

    <Style x:Key="MyCurrenciesDataGridStyle" TargetType="DataGrid">
      <Setter Property="ItemsSource" Value="{Binding}"/>
      <Setter Property="AutoGenerateColumns" Value="False"/>
      <Setter Property="AlternatingRowBackground" Value="#E0F1FF"/>
      <Setter Property="GridLinesVisibility" Value="Vertical"/>
      <Setter Property="CanUserResizeRows" Value="False"/>
      <Setter Property="SelectionMode" Value="Single"/>
      <Setter Property="RowDetailsVisibilityMode" Value="Collapsed"/>
      <Setter Property="ClipboardCopyMode" Value="None"/>
      <Setter Property="RowDetailsVisibilityMode" Value="Collapsed"/>
    </Style>

    <Style x:Key="GridComboStyle" TargetType="{x:Type ComboBox}">
      <Setter Property="IsEditable" Value="True"/>
      <Setter Property="StaysOpenOnEdit" Value="True"/>
      <Setter Property="Padding" Value="0"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="IsTextSearchCaseSensitive" Value="true"/>
    </Style>

    <Style x:Key="GridTextBoxStyle" TargetType="{x:Type TextBox}">
      <Setter Property="Padding" Value="0"/>
      <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="NumericTextBoxStyle" TargetType="{x:Type TextBox}">
      <Setter Property="Padding" Value="0"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="local:CalculatorPopup.CalculatorEnabled" Value="True" />
    </Style>

    <c:NullableValueConverter x:Key="NullableValueConverter" />



    <!-- Symbol -->
    <DataTemplate x:Key="myTemplateSymbol">
      <!-- the border makes the whole column hittable -->
      <Border BorderThickness="0,0,0,0" Background="Transparent" Focusable="false" VerticalAlignment="Stretch">
        <TextBlock Text="{Binding Path=Symbol, Converter={StaticResource NullableValueConverter}}" />
      </Border>
    </DataTemplate>


    <DataTemplate x:Key="myTemplateSymbolEdit">
      <!-- the border makes the whole column hittable -->
      <Border BorderThickness="0,0,0,0" Background="Transparent" Focusable="false" VerticalAlignment="Stretch">
        <TextBox Style="{StaticResource GridTextBoxStyle}" Text="{Binding Path=Symbol, Converter={StaticResource NullableValueConverter}}" />
      </Border>
    </DataTemplate>


    <!-- Name -->
    <DataTemplate x:Key="myTemplateName">
      <!-- the border makes the whole column hittable -->
      <Border BorderThickness="0,0,0,0" Background="Transparent" Focusable="false" VerticalAlignment="Stretch">
        <TextBlock Text="{Binding Path=Name, Converter={StaticResource NullableValueConverter}}" />
      </Border>
    </DataTemplate>


    <DataTemplate x:Key="myTemplateNameEdit">
      <!-- the border makes the whole column hittable -->
      <Border BorderThickness="0,0,0,0" Background="Transparent" Focusable="false" VerticalAlignment="Stretch">
        <TextBox Style="{StaticResource GridTextBoxStyle}" Text="{Binding Path=Name, Converter={StaticResource NullableValueConverter}}" />
      </Border>
    </DataTemplate>


    <!-- Ratio -->
    <DataTemplate x:Key="myTemplateRatio">
      <!-- the border makes the whole column hittable -->
      <Border BorderThickness="0,0,0,0" Background="Transparent" Focusable="false" VerticalAlignment="Stretch">
        <TextBlock Text="{Binding Ratio, StringFormat={}{0:0.0000}, Mode=TwoWay}" TextAlignment="Right" VerticalAlignment="Top"/>
      </Border>
    </DataTemplate>

    <DataTemplate x:Key="myTemplateRatioEdit" >
      <!-- the border makes the whole column hittable -->
      <Border BorderThickness="0,0,0,0" Background="Transparent" Focusable="false" VerticalAlignment="Stretch">
        <TextBox Style="{StaticResource GridTextBoxStyle}"  Text="{Binding Ratio, StringFormat={}{0:0.0000}, Mode=TwoWay}" TextAlignment="Right" />
      </Border>
    </DataTemplate>

    <!-- LastRatio -->
    <DataTemplate x:Key="myTemplateLastRatio">
      <!-- the border makes the whole column hittable -->
      <Border BorderThickness="0,0,0,0" Background="Transparent" Focusable="false" VerticalAlignment="Stretch">
        <TextBlock Text="{Binding LastRatio, StringFormat={}{0:0.0000}, Mode=TwoWay}" TextAlignment="Right" VerticalAlignment="Top" />
      </Border>
    </DataTemplate>

    <DataTemplate x:Key="myTemplateLastRatioEdit" >
      <!-- the border makes the whole column hittable -->
      <Border BorderThickness="0,0,0,0" Background="Transparent" Focusable="false" VerticalAlignment="Stretch">
        <TextBox Style="{StaticResource NumericTextBoxStyle}" Text="{Binding LastRatio, StringFormat={}{0:0.0000}, Mode=TwoWay}" TextAlignment="Right" />
      </Border>
    </DataTemplate>



    <Style x:Key="MyDataGridCellStyle" TargetType="{x:Type DataGridCell}">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type DataGridCell}">
            <Border x:Name="CellBorder"
                  				BorderBrush="{TemplateBinding BorderBrush}"  
                  				BorderThickness="0" 
                  				SnapsToDevicePixels="True">
              <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource WalkaboutToolBoxListBoxItemBrushWhenSelected}" TargetName="CellBorder"/>
                <Setter Property="Foreground" Value="{DynamicResource WalkaboutSelectedTextBrush}"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>


    <views:ValidationErrorGetErrorMessageConverter x:Key="ValidationErrorGetErrorMessageConverter" />

    <c:TrueToVisible x:Key="TrueToVisible" />

    <ControlTemplate x:Key="RowValidationErrorTemplate">
      <Grid ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}},
                        Path=(Validation.Errors),
                        Converter={StaticResource ValidationErrorGetErrorMessageConverter}}" 
                   Background="Yellow" Margin="-1,-1,-1,-1">
        <Image Width="16" Height="16" Source="/MyMoney;component/Icons/Error.png" 
                       
                      />
      </Grid>
    </ControlTemplate>






    <!-- DATE -->
    <DataTemplate x:Key="myTemplateDate">
      <!-- the border makes the whole column hittable -->
      <Border BorderThickness="0" Background="Transparent" Focusable="false" VerticalAlignment="Stretch">
        <TextBlock Text="{Binding Date,StringFormat={}{0:d}}" MinWidth="100" VerticalAlignment="Top"/>
      </Border>
    </DataTemplate>

    <DataTemplate x:Key="myTemplateDateEdit">
      <!-- the border makes the whole column hittable -->
      <Border BorderThickness="0,0,0,0" Background="Transparent" Focusable="false" VerticalAlignment="Stretch">
        <local:MoneyDatePicker SelectedDate="{Binding Date}" SelectedDateFormat="Short" MinWidth="100" VerticalAlignment="Top"/>
      </Border>
    </DataTemplate>


    <!-- Numerator -->
    <DataTemplate x:Key="myTemplateNumerator">
      <!-- the border makes the whole column hittable -->
      <Border BorderThickness="0,0,0,0" Background="Transparent" Focusable="false" VerticalAlignment="Stretch">
        <TextBlock Text="{Binding Numerator,StringFormat={}{0:N}}" TextAlignment="Right" VerticalAlignment="Top"/>
      </Border>
    </DataTemplate>

    <DataTemplate x:Key="myTemplateNumeratorEdit">
      <!-- the border makes the whole column hittable -->
      <Border BorderThickness="0,0,0,0" Background="Transparent" Focusable="false" VerticalAlignment="Stretch">
        <TextBox Style="{StaticResource NumericTextBoxStyle}" Text="{Binding Numerator, StringFormat={}{0:N}, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" VerticalAlignment="Top"/>
      </Border>
    </DataTemplate>




  </UserControl.Resources>



  <!-- CURRENCIES -->
  <local:MoneyDataGrid x:Name="CurrenciesDataGrid" Grid.Row="1" Style="{StaticResource MyCurrenciesDataGridStyle}"  CellStyle="{StaticResource MyDataGridCellStyle}">
    <DataGrid.Columns>

      <!-- Symbol -->
      <DataGridTemplateColumn Header="Symbol" CellTemplate="{StaticResource myTemplateSymbol}" CellEditingTemplate="{StaticResource myTemplateSymbolEdit}"
                                    SortMemberPath="Symbol"/>

      <!-- Name -->
      <DataGridTemplateColumn Header="Full Name" CellTemplate="{StaticResource myTemplateName}" CellEditingTemplate="{StaticResource myTemplateNameEdit}"
                                    SortMemberPath="Name"/>

      <!-- Ratio -->
      <DataGridTemplateColumn Header="Current Value"  CellTemplate="{StaticResource myTemplateRatio}" CellEditingTemplate="{StaticResource myTemplateRatioEdit}"
                                    SortMemberPath="Ratio" MinWidth="80"/>

      <!-- LastRatio -->
      <DataGridTemplateColumn Header="Last Value"  CellTemplate="{StaticResource myTemplateLastRatio}" CellEditingTemplate="{StaticResource myTemplateLastRatioEdit}"
                                    SortMemberPath="LastRatio" MinWidth="80"/>

    </DataGrid.Columns>
  </local:MoneyDataGrid>

</UserControl>
